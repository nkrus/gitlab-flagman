---
name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
        id: go

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: go mod tidy

      - name: Run Linter
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && golangci-lint run

      - name: Run Tests
        run: go test ./...

  release:
    name: Release Binary
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Binary
        run: go build -o gitlab-flagman .

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release-binary
          asset_name: <your-project-name>
          asset_content_type: application/octet-stream
